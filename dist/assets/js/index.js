const setStyles=localStorage.getItem("weatherStyles")?JSON.parse(localStorage.getItem("weatherStyles")):{};localStorage.setItem("weatherStyles",JSON.stringify(setStyles));const getStylesList=JSON.parse(localStorage.getItem("weatherStyles")),getSettingsBtn=document.getElementById("settings"),getMainMenuBtn=document.getElementById("main-menu"),getStylesBtn=document.getElementById("styles-btn"),getMenuStyles=document.getElementById("styles-menu"),getMenuColor=document.getElementById("colors"),getMenuFont=document.getElementById("fonts"),getWeatherBlock=document.getElementById("weather-block"),getWeatherWrap=document.getElementById("weather-wrap"),getCitiesList=document.getElementById("cities-list"),getLocation=document.getElementById("currentLocation"),monthNames=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayName=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],date=new Date,currentDate=date.getDate()+" "+monthNames[date.getMonth()]+" "+date.getFullYear(),getDayName=dayName[date.getDay()];class UI{constructor(){}settings(t,e){t.classList.toggle(e)}setActiveDayPeriod(t){t.classList.contains("info-list__item")&&(getWeatherBlock.classList="weather-block show-"+t.parentNode.getAttribute("data-period"))}setStyles(t,e,a,n){t.classList.contains(e)&&(getStylesList[n]=t.getAttribute(a),localStorage.setItem("weatherStyles",JSON.stringify(getStylesList)))}saveStyles(t,e){e.classList="weather-wrap";for(let a in t)e.classList+=" "+t[a]}}const initUI=new UI;getSettingsBtn.addEventListener("click",function(t){this.classList.toggle("active"),initUI.settings(getMainMenuBtn,"active")}),getStylesBtn.addEventListener("click",()=>{initUI.settings(getMenuStyles,"active")}),getWeatherBlock.addEventListener("click",t=>{initUI.setActiveDayPeriod(t.target)}),getMenuColor.addEventListener("click",t=>{initUI.setStyles(t.target,"menu__color--item","data-theme","theme"),initUI.saveStyles(getStylesList,getWeatherWrap)}),getMenuFont.addEventListener("click",t=>{initUI.setStyles(t.target,"menu__font--item","data-font","font"),initUI.saveStyles(getStylesList,getWeatherWrap)});class Data{constructor(){}outputCities(t,e){for(var a in t)e.innerHTML+=`<li class="menu__item">${a}</li>`}outputWeather(t,e,a,n){e.innerHTML="",t[a][n].map(t=>{e.innerHTML+=`<ul class="info-list ${t.time}" data-period=${t.time}>\n                    <li class="info-list__item ">\n                        ${t.time}\n                    </li>\n    \n                    <li class="info-list__item temperature">\n                        ${t.temp}\n                    </li>\n    \n                    <li class="info-list__item">\n                        <span class="far fa-calendar-alt"></span>\n                        ${currentDate}\n                    </li>\n    \n                    <li class="info-list__item">\n                        ${t.wet}\n                        <span class="fas fa-tint"></span>\n                    </li>\n    \n                    <li class="info-list__item">\n                        <span class="fas fa-wind"></span>\n                        ${t.wind}\n                    </li>\n    \n                    <li class="info-list__item">\n                        ${t.wea}\n                        <span class="fas fa-cloud-sun"></span>\n                    </li>\n                    <li class="info-list__item" style='width: 100%'>\n                        <div class="${t.time+"-weather "+t.wea}"></div>\n                    </li>\n                </ul>`})}outputLocaion(t,e,a){t.innerHTML=e+", "+a}}const initData=new Data,getData=async()=>{const t=await fetch("https://my-json-server.typicode.com/bogdan845/weather-data/db"),e=await t.json();(await(()=>{initUI.saveStyles(getStylesList,getWeatherWrap),document.body.classList.remove("awaiting")}))(),initData.outputCities(e,getCitiesList);let a=document.getElementsByClassName("menu__item"),n={},i=(localStorage.getItem("weatherCity")?localStorage.getItem("weatherCity",JSON.stringify(n)):localStorage.setItem("weatherCity",JSON.stringify({city:"Kiev",country:"Ukraine"})),JSON.parse(localStorage.getItem("weatherCity")));Array.from(a).forEach(t=>{t.addEventListener("click",function(){getSettingsBtn.classList.remove("active"),getMainMenuBtn.classList.remove("active"),n={city:this.innerText,country:e[this.innerText].country},localStorage.setItem("weatherCity",JSON.stringify(n)),i=JSON.parse(localStorage.getItem("weatherCity")),initData.outputWeather(e,getWeatherBlock,i.city,getDayName),initData.outputLocaion(getLocation,i.city,i.country)})}),initData.outputWeather(e,getWeatherBlock,i.city,getDayName),initData.outputLocaion(getLocation,i.city,i.country)};getData();const dayPeriod=t=>{t>=4&&t<12?getWeatherBlock.classList.add("show-morning"):t>=12&&t<18?getWeatherBlock.classList.add("show-day"):t>=18&&t<=23?getWeatherBlock.classList.add("show-evening"):getWeatherBlock.classList.add("show-night")};dayPeriod(date.getHours());
//# sourceMappingURL=index.js.map
